services:
  app:
    build: .
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      clickhouse:
        condition: service_healthy
      nats:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    env_file:
      - .env

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    depends_on:
      postgres:
        condition: service_healthy
    command: ["-path", "/migrations/postgres", "-database", "postgresql://user:password@postgres:5432/goods?sslmode=disable", "up"]

  migrate_clickhouse:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    depends_on:
      clickhouse:
        condition: service_healthy
    command: ["-path", "/migrations/clickhouse", "-database", "clickhouse://clickhouse:9000/default", "up"]

  postgres:
    image: postgres:17
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=goods
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d goods"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8
    ports:
      - "6380:6380"

  clickhouse:
    image: yandex/clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8123/ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  nats:
    image: nats:2.9.15
    ports:
      - "4222:4222"

volumes:
  postgres_data:
